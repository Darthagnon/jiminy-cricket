# do the following:
sudo apt -y update
sudo apt -y install cmake
sudo apt -y install libsodium-dev
sudo apt -y install libopus-dev
sudo apt -y install git

# now grab c-toxcore (tip)
cd && mkdir -p development/tox && cd development/tox
git clone https://github.com/TokTok/c-toxcore
cd c-toxcore && mkdir _build && cd _build
cmake ..
make -j 4
sudo make install
cd && mkdir -p development/tox/bot && cd development/tox/bot 

# now for my crap bot (you'll have to download it if you don't already
# have it).  You should ONLY hgave server_bot.cpp.  You probably want
# to have a "development" directory or something to place the code in.
# place it in the directory ~development/tox/bot

export LD_LIBRARY_PATH=/usr/local/lib/
g++ -Wall -g -o server_bot server_bot3.cpp -lsodium -I /usr/local/include/ -ltoxcore
./server_bot

# now it will be running.  It will print out the (newly generated) tox_id
# when it starts.  Once it creates a tox_id (that's in the file savedata.tox)
# it will use the same tox_id no matter how often you restart it.
#
# be careful not to run two instances at the same time.  If you do, the
# bot will seem to be going up and down all the time, and you may corrupt
# the savedata.tox file.
#
# And REMEMBER although this seems like it works, it's a mess.

# you can use "nohup" to run the bot in the background if you like, this
# will allow it to start, and it will dump output to a file.  You can log
# out of the pi and it will continue to run.  You can use "pkill" to kill
# an instance that is running.

# https://www.valgrind.org/
# https://www.valgrind.org/docs/manual/manual.html
# ------------------------------------------------
# You'll probably want to learn about Valgrind, callgrind, kcachegrind, and
# other linux debug tools.  They are very powerful for understanding how
# a program works, and why it crashes.

# may want to look at gprof
